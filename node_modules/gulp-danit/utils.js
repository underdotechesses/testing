import chalk from "chalk";
import { existsSync } from "fs";
import { mkdir, writeFile } from "fs/promises";
import { resolve } from "path";

class Logger {
  magenta(log) {
    console.log(chalk.magentaBright(log))
  }

  green(log) {
    console.log(chalk.greenBright(log))
  }

  red(log) {
    console.log(chalk.redBright(log))
  }
}

export const logger = new Logger();

/**
 * @param dirs {string[]}
 * @returns {Promise<void>}
 */
export const createDirsIfNotExist = async (dirs) => {
  for (let dir of dirs) {
    if (!existsSync(dir)) {
      try {
        await mkdir(dir, { recursive: true });
      } catch (error) {
        logger.red(error);
      }
    }
  }
};

/**
 * @param path {string}
 * @param content {string}
 */
export const createFile = async (path, content) => {
  try {
    await writeFile(resolve(process.cwd(), path), content);
    logger.green(`${path}...`)
  } catch (error) {
    logger.red(error);
  }

};